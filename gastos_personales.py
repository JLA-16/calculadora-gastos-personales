# -*- coding: utf-8 -*-
"""Calculadora de Gastos Personales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/148mXqE5AqvZyF6Y6eeNHF-NE2QrZ0dAm

# **Calculadora de Gastos Personales**
"""

# ---------------------------------------------
# Calculadora de gastos personales
# Autor: Jordan Arrata
# Descripción:
# Programa para registrar y analizar los gastos personales.
# Permite agregar gastos, ver un resumen total, promedio y el gasto más alto.
# ---------------------------------------------

# Lista global donde se guardarán todos los gastos
gastos = []

# ---------------------------------------------
# Función principal del menú
# ---------------------------------------------
def menu():
  while True:
    print("\n**Bienvenido a la calculadora de gastos personales**")
    print("Elige una opción")
    print("1. Agregar gasto")
    print("2. Ver resumen")
    print("3. Salir")
    opcion = input("¿Qué deseas hacer hoy? = ")

    if opcion == "1":
      agregar_gastos()
    elif opcion == "2":
      total, promedio, mayor_gasto = ver_resumen()
      mostrar_resumen(total, promedio, mayor_gasto)
    elif opcion == "3":
      print("Saliendo del programa. ¡Adiós!")
      break
    else:
      print("Opción incorrecta, inténtalo de nuevo")

# ---------------------------------------------
# Función para agregar un nuevo gasto
# ---------------------------------------------
def agregar_gastos():
  descripcion = input("Agrega una descripción al gasto: ")
  monto = float(input("Agrega el monto: "))
  categoria = input("Agrega una categoría al gasto: ")

  gasto = {
      "descripcion": descripcion,
      "monto": monto,
      "categoria": categoria
  }
  gastos.append(gasto)
  print("---Datos agregados correctamente---")

# ---------------------------------------------
# Función para calcular el resumen de gastos
# ---------------------------------------------
def ver_resumen():
  total = 0
  for resumen in gastos:
    print("Descripción:", resumen["descripcion"], "--", "Monto: $", resumen["monto"], "--", "Categoría:", resumen["categoria"])
    total += resumen["monto"]

  mayor_gasto = max(gastos, key=lambda x: x["monto"])  # encuentra el gasto más alto
  promedio = total / len(gastos)
  return total, promedio, mayor_gasto

# ---------------------------------------------
# Función para mostrar el resumen formateado
# ---------------------------------------------
def mostrar_resumen(total, promedio, mayor_gasto):
  print(f"\n--- RESUMEN DE GASTOS ---")
  print(f"Total gastado: ${total:.2f}")
  print(f"Promedio de los gastos: ${promedio:.2f}")
  print(f"Gasto más alto: {mayor_gasto['descripcion']} (${mayor_gasto['monto']:.2f})")

# Llamada principal al programa
print(menu())